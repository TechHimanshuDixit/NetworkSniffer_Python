# Network Packet Sniffer
# Created by: Himanshu Dixit

from scapy.all import sniff
from scapy.layers.inet import IP, TCP, UDP, ICMP

def analyze_packet(packet):
    if packet.haslayer(IP):
        ip_layer = packet[IP]
        src_ip = ip_layer.src
        dst_ip = ip_layer.dst
        protocol = ip_layer.proto

        print("\n==============================")
        print(f"Source IP      : {src_ip}")
        print(f"Destination IP : {dst_ip}")

        if packet.haslayer(TCP):
            print("Protocol        : TCP")
            print(f"Source Port     : {packet[TCP].sport}")
            print(f"Destination Port: {packet[TCP].dport}")
        elif packet.haslayer(UDP):
            print("Protocol        : UDP")
            print(f"Source Port     : {packet[UDP].sport}")
            print(f"Destination Port: {packet[UDP].dport}")
        elif packet.haslayer(ICMP):
            print("Protocol        : ICMP")
        else:
            print(f"Protocol        : Other ({protocol})")

        payload = bytes(packet[IP].payload)
        print(f"Payload Length  : {len(payload)} bytes")

print("ðŸ“¡ Packet Sniffer is running... (Press Ctrl+C to stop)\n")
sniff(prn=analyze_packet, store=False)
